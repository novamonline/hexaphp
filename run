#!/usr/bin/env php
<?php

if (!defined('DS')) {
    define('DS', DIRECTORY_SEPARATOR);
}
if (!defined('ROOT')) {
    define('ROOT', realpath(__DIR__) . DS);
}
echo "===============================\n";
echo "  HexaPHP CLI \n";
echo "===============================\n";

require_once ROOT . 'core' .DS. 'autoload.php';

use HexaPHP\Core\Cmd\CreateAppCmd;
use HexaPHP\Core\Cmd\CreateLibCmd;
use HexaPHP\Core\Cmd\ServeAppCmd;
use HexaPHP\Core\Cmd\RemoveLibCmd;

$args = array_slice($argv, 1);

$Cmd = array_shift($args);
$name = array_shift($args);

$readArg = function(string $appOrLib) {
    echo "Please enter the name of the $appOrLib:";
    $handle = fopen ("php://stdin","r");
    $line = fgets($handle);
    $entry = trim($line);
    if ($entry == ""){
        echo "Usage: run <Cmd> <name>\n";
        exit(1);
    }
    return $entry;
};

$runCommand = function(string $cmd, string $type) use($readArg, $name, $args){
    $createCmd = new $cmd();
    if ($name == ""){
        $name = $readArg($type);
    }
    $createCmd->execute([$name, ...$args]);
};

switch (strtolower($Cmd)) {
    case 'install':
        exec("composer install --prefer-dist --no-cache");
        break;
    case 'create:app':
        $runCommand(CreateAppCmd::class, 'app');
        break;
    case 'create:lib':
        $runCommand(CreateLibCmd::class, 'lib');
        break;
    case 'remove:lib':
        $runCommand(RemoveLibCmd::class, 'lib');
        break;
    case 'serve:app':
        $runCommand(ServeAppCmd::class, 'app');
        break;
    case 'build:app':
        echo "Deploying {$name}...\n";
        exec("composer install --prefer-dist --no-cache");
        exec("docker build -t hexapp:latest .");
        
        if ($name != "."){
            exec("docker build -t hexapp/$name --build-arg BASE_IMAGE=hexapp:latest ./apps/$name");
        }
        break;
    case 'test:app':
        echo "Testing {$name}...\n";
        exec("composer test");
        break;
    case 'deploy:app':
        echo "Deploying {$name}...\n";
        $env = $args[2] ?? 'local';
        // exec("scp package.zip user@production:/path/to/destination");
        break;
    default:
        echo "Unknown Cmd: {$Cmd}\n";
        exit(1);
}
